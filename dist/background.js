(()=>{"use strict";class e{static calculateScore(e,t=[]){let a=100;return a-=Math.min(5*e.length,40),a-=3*e.filter((e=>["advertising","social","analytics"].includes(e.category))).length,a-=Math.min(8*t.length,30),Math.max(0,Math.min(100,a))}}class t{static async analyzePolicy(e){try{console.log("🚀 [Frontend] Starting privacy policy analysis for:",e),console.log("🌐 [Frontend] API endpoint:",`${this.API_BASE_URL}/privacy-policy/analyze`);const t={url:e};console.log("📤 [Frontend] Request body:",JSON.stringify(t,null,2));const a=await fetch(`${this.API_BASE_URL}/privacy-policy/analyze`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t),signal:AbortSignal.timeout(3e4)});if(console.log("📥 [Frontend] Response status:",a.status,a.statusText),console.log("📥 [Frontend] Response headers:",Object.fromEntries(a.headers.entries())),!a.ok){const e=await a.json().catch((()=>({})));throw console.error("❌ [Frontend] API Error:",e),new Error(e.error||`HTTP ${a.status}: ${a.statusText}`)}const o=await a.json();if(console.log("✅ [Frontend] Raw API response:",JSON.stringify(o,null,2)),!o.success)throw new Error(o.error||"Analysis failed");return console.log("Privacy policy analysis completed:",o.data),o.data}catch(e){console.error("Privacy policy analysis failed:",e);const t={score:50,risks:["Unable to analyze privacy policy - please review manually"],summary:"Privacy policy analysis failed. This could be due to network issues, missing privacy policy, or service unavailability.",dataSharing:[],recommendations:["Review the privacy policy manually","Check if the website has a privacy policy","Contact the website for clarification on data practices"],complianceStatus:{gdpr:"unclear",ccpa:"unclear",coppa:"unclear"},dataRetention:"Unable to determine data retention policy",userRights:[],thirdPartySharing:!0,cookiePolicy:"Unable to determine cookie policy",policyMetadata:{url:null,title:"Privacy Policy Analysis Failed",analyzedAt:(new Date).toISOString(),error:e instanceof Error?e.message:"Unknown error"}};return e instanceof Error&&(e.message.includes("timeout")||e.message.includes("AbortError")?(t.summary="Privacy policy analysis timed out. The website may be slow to respond.",t.recommendations=["Try again in a few minutes","Check your internet connection","Review the privacy policy manually"]):e.message.includes("404")||e.message.includes("not found")?(t.summary="No privacy policy was found on this website.",t.score=30,t.risks=["No privacy policy found","Data practices unclear","User rights undefined"],t.recommendations=["Contact the website to request their privacy policy","Avoid sharing personal information","Consider the privacy implications of using this site"]):(e.message.includes("network")||e.message.includes("fetch"))&&(t.summary="Unable to connect to privacy analysis service.",t.recommendations=["Check your internet connection","Try again later","Review the privacy policy manually"])),t}}static async findPrivacyPolicyUrl(e){try{const t=await fetch(`${this.API_BASE_URL}/privacy-policy/find?url=${encodeURIComponent(e)}`,{method:"GET",signal:AbortSignal.timeout(1e4)});if(!t.ok)return null;const a=await t.json();return a.success?a.data.policyUrl:null}catch(e){return console.error("Failed to find privacy policy URL:",e),null}}}t.API_BASE_URL="https://kavach-hackolution.onrender.com/api";const a={"doubleclick.net":{category:"advertising",name:"Google DoubleClick"},"googletagmanager.com":{category:"analytics",name:"Google Tag Manager"},"facebook.com":{category:"social",name:"Facebook Pixel"},"google-analytics.com":{category:"analytics",name:"Google Analytics"},"connect.facebook.net":{category:"social",name:"Facebook Connect"},"amazon-adsystem.com":{category:"advertising",name:"Amazon Advertising"},"twitter.com":{category:"social",name:"Twitter Analytics"},"linkedin.com":{category:"social",name:"LinkedIn Insights"}};function o(e){return new Promise((t=>{let a=0;const o=setInterval((()=>{a++,window.FingerprintJS?(clearInterval(o),async function(){try{const a=await window.FingerprintJS.load({apiKey:e,region:"ap"}),o=await a.get({extendedResult:!0});t({success:!0,data:{visitorId:o.visitorId,confidence:o.confidence,components:o.components,requestId:o.requestId,timestamp:Date.now()}})}catch(e){t({success:!1,error:`Fingerprinting failed: ${e.message}`})}}()):a>50&&(clearInterval(o),t({success:!1,error:"FingerprintJS object not found after script injection."}))}),100)}))}new class{constructor(){this.siteData=new Map,this.blockedRequests=new Map,this.privacyPolicyUrls=new Map,console.log("🚀 Kavach Background Service starting..."),this.setupRequestBlocking(),this.setupTabListeners(),this.setupMessageListeners(),console.log("✅ Kavach Background Service initialized")}safeParseURL(e){try{return e&&"string"==typeof e?new URL(e):(console.warn("❌ Invalid URL input:",e),null)}catch(t){return console.warn("❌ Failed to parse URL:",e,t),null}}getDomainFromURL(e){const t=this.safeParseURL(e);return t?t.hostname:null}setupRequestBlocking(){console.log("🛡️ Kavach: Setting up request blocking..."),chrome.webRequest.onBeforeRequest.addListener((e=>{if(console.log("🌐 Request detected:",e.url,"Type:",e.type,"Initiator:",e.initiator),"main_frame"===e.type)return{};const t=this.safeParseURL(e.url),a=e.initiator?this.safeParseURL(e.initiator):null;return t&&a&&t.hostname!==a.hostname&&(console.log("🚨 Third-party request:",t.hostname,"from",a.hostname),this.trackThirdPartyRequest(a.hostname,t.hostname,e.type)),{}}),{urls:["<all_urls>"]},["requestBody"])}setupTabListeners(){console.log("👂 Setting up tab listeners..."),chrome.tabs.onUpdated.addListener(((e,t,a)=>{"complete"===t.status&&a.url&&this.isValidHttpUrl(a.url)&&(console.log("📄 Tab completed loading:",a.url),this.initializeSiteData(a.url))})),chrome.tabs.onActivated.addListener((async e=>{try{const t=await chrome.tabs.get(e.tabId);t.url&&this.isValidHttpUrl(t.url)&&(console.log("🔄 Tab activated:",t.url),this.initializeSiteData(t.url))}catch(e){console.log("❌ Error getting active tab:",e)}}))}isValidHttpUrl(e){try{const t=new URL(e);return"http:"===t.protocol||"https:"===t.protocol}catch{return!1}}trackThirdPartyRequest(t,o,i){console.log("📊 Tracking third-party request:",{sourceDomain:t,trackerDomain:o,requestType:i});let s=this.siteData.get(t);if(!s&&(console.log("❌ No site data found for:",t,"- Creating new site data"),this.initializeSiteDataForDomain(t),s=this.siteData.get(t),!s))return void console.log("❌ Failed to create site data for:",t);const r=s.trackers.find((e=>e.domain===o));if(r)r.count++,console.log("📈 Updated tracker count:",o,r.count);else{const e=a[o],t={domain:o,count:1,category:e?.category||"unknown",blocked:this.isTrackerBlocked(o)};s.trackers.push(t),console.log("🆕 New tracker detected:",t)}const n=s.trustScore;s.trustScore=e.calculateScore(s.trackers),console.log("🎯 Trust score updated:",n,"→",s.trustScore),this.updateDataFlow(s,t,o),this.siteData.set(t,s)}isTrackerBlocked(e){return["doubleclick.net","googletagmanager.com","facebook.com/tr"].some((t=>e.includes(t)))}updateDataFlow(e,t,a){if(e.dataFlow.nodes.find((e=>e.id===t))||e.dataFlow.nodes.push({id:t,domain:t,type:"source",position:{x:100,y:100}}),!e.dataFlow.nodes.find((e=>e.id===a))){const t=e.dataFlow.nodes.length;e.dataFlow.nodes.push({id:a,domain:a,type:"tracker",position:{x:200+100*t,y:150}})}e.dataFlow.edges.find((e=>e.from===t&&e.to===a))||e.dataFlow.edges.push({from:t,to:a,dataType:"user_data"})}initializeSiteData(e){const t=this.getDomainFromURL(e);if(t)if(console.log("🏠 Initializing site data for:",t),this.siteData.has(t))console.log("♻️ Site data already exists for:",t);else{const a={url:e,trustScore:100,trackers:[],dataFlow:{nodes:[],edges:[]}};this.siteData.set(t,a),console.log("✅ Site data initialized:",a)}else console.warn("❌ Cannot initialize site data for invalid URL:",e)}initializeSiteDataForDomain(e){if(console.log("🏠 Initializing site data for domain:",e),this.siteData.has(e))console.log("♻️ Site data already exists for domain:",e);else{const t={url:`https://${e}`,trustScore:100,trackers:[],dataFlow:{nodes:[],edges:[]}};this.siteData.set(e,t),console.log("✅ Site data initialized for domain:",t)}}async getSiteData(e){const t=this.getDomainFromURL(e);if(!t)return console.warn("❌ Cannot get site data for invalid URL:",e),null;this.siteData.has(t)||(console.log("🔄 Site data not found, initializing for:",t),this.initializeSiteData(e));const a=this.siteData.get(t)||null;return console.log("📊 Getting site data for:",t,"Found:",!!a,"Trackers:",a?.trackers?.length||0),a}async toggleTrackerBlocking(e){e?await chrome.declarativeNetRequest.updateEnabledRulesets({enableRulesetIds:["tracker_rules"]}):await chrome.declarativeNetRequest.updateEnabledRulesets({disableRulesetIds:["tracker_rules"]})}setupMessageListeners(){chrome.runtime.onMessage.addListener(((e,t,a)=>{switch(console.log("📨 Message received:",e.action,e),e.action){case"getSiteData":return this.getSiteData(e.url).then(a),!0;case"getFingerprintScript":return this.getFingerprintScript(e.apiKey).then(a),!0;case"toggleBlocking":return this.toggleTrackerBlocking(e.enabled).then((()=>{a({success:!0})})),!0;case"analyzePrivacyPolicy":return this.analyzePrivacyPolicy(e.url).then(a),!0;case"privacyPoliciesFound":return this.storePrivacyPolicyUrls(e.currentUrl,e.urls),a({success:!0}),!0;case"debugInfo":const t={trackedDomains:Array.from(this.siteData.keys()),totalSites:this.siteData.size,siteDataSnapshot:Array.from(this.siteData.entries()).map((([e,t])=>({domain:e,trackerCount:t.trackers.length,trustScore:t.trustScore})))};return console.log("🐛 Debug info requested:",t),a(t),!0;case"runFingerprint":return e.tabId?this.handleFingerprinting(e.apiKey,e.tabId).then(a).catch((e=>a({success:!1,error:e.message}))):a({success:!1,error:"No tabId provided in the request."}),!0;case"performOptOut":return this.performComprehensiveOptOut(e.url,e.tabId).then(a).catch((e=>a({success:!1,error:e.message}))),!0}}))}storePrivacyPolicyUrls(e,t){const a=this.getDomainFromURL(e);a?this.privacyPolicyUrls.set(a,t):console.warn("❌ Cannot store privacy policy URLs for invalid URL:",e)}async analyzePrivacyPolicy(e){const a=this.getDomainFromURL(e);if(!a)return console.warn("❌ Cannot analyze privacy policy for invalid URL:",e),{error:"Invalid URL provided"};console.log("🤖 Starting privacy policy analysis using AI backend for:",e),console.log("🌐 API endpoint:","https://kavach-hackolution.onrender.com/api/privacy-policy/analyze");try{console.log("📞 Calling PrivacyPolicyAnalyzer.analyzePolicy...");const o=await t.analyzePolicy(e);console.log("✅ Privacy policy analysis completed successfully!"),console.log("📊 Analysis result:",JSON.stringify(o,null,2));const i=this.siteData.get(a);if(i){const e={score:o.score||50,risks:o.risks||[],summary:o.summary||"Privacy policy analysis completed.",safety:o.safety||"RISKY",dataSharing:o.dataSharing||[],industryType:o.industryType,positiveFeatures:o.positiveFeatures,analysisDepth:o.analysisDepth,lastAnalyzed:(new Date).toISOString()};i.privacyAnalysis=e,this.siteData.set(a,i),console.log("💾 Analysis stored in site data for:",a)}return o}catch(t){console.error("❌ Privacy policy analysis failed:",t),console.error("🔍 Error details:",{message:t instanceof Error?t.message:"Unknown error",stack:t instanceof Error?t.stack:"No stack trace",siteUrl:e,domain:a});const o={score:50,risks:["Unable to analyze privacy policy - backend service unavailable"],summary:"Privacy policy analysis failed. This could be due to network issues or service unavailability.",safety:"RISKY",dataSharing:[],industryType:"Unknown",positiveFeatures:[],analysisDepth:"Failed",lastAnalyzed:(new Date).toISOString(),error:t instanceof Error?t.message:"Unknown error"};console.log("🔄 Returning fallback analysis:",o);const i=this.siteData.get(a);return i&&(i.privacyAnalysis=o,this.siteData.set(a,i),console.log("💾 Fallback analysis stored in site data for:",a)),o}}async getFingerprintScript(e){const t=`https://fpnpmcdn.net/v3/${e}/loader_v3.11.10.js`;try{const e=await fetch(t);if(!e.ok)throw new Error(`Failed to fetch script: ${e.statusText}`);return{script:await e.text()}}catch(e){return console.error("Failed to fetch FingerprintJS script:",e),{error:e.message}}}async handleFingerprinting(e,t){try{await chrome.scripting.executeScript({target:{tabId:t},files:["fingerprint-agent.js"],world:"MAIN"});const a=await chrome.scripting.executeScript({target:{tabId:t},func:o,args:[e],world:"MAIN"});if(a&&a[0]&&a[0].result)return a[0].result;throw new Error("No result returned from fingerprinting script")}catch(e){return console.error("Background fingerprinting error:",e),{success:!1,error:`Failed to run fingerprinting: ${e.message}`}}}async performComprehensiveOptOut(e,t){try{const t=this.getDomainFromURL(e);if(!t)throw new Error("Invalid URL provided");console.log("🚫 Starting comprehensive opt-out for:",t),await this.addDomainToBlockList(t),this.clearDomainTrackingData(t),await this.enableEnhancedBlockingForDomain(t),this.privacyPolicyUrls.delete(t),await chrome.storage.local.set({[`optedOut_${t}`]:{timestamp:Date.now(),userInitiated:!0,comprehensive:!0}});const a=this.siteData.get(t);return a&&(a.trustScore=95,a.trackers=[],this.siteData.set(t,a)),console.log("✅ Background opt-out processing completed for:",t),{success:!0,message:`Comprehensive opt-out completed for ${t}`}}catch(e){return console.error("❌ Background opt-out failed:",e),{success:!1,error:`Opt-out failed: ${e.message}`}}}async addDomainToBlockList(e){try{const t=(await chrome.storage.local.get(["blockedDomains"])).blockedDomains||[];t.includes(e)||(t.push(e),await chrome.storage.local.set({blockedDomains:t}),console.log("📝 Added domain to block list:",e))}catch(e){console.warn("Failed to add domain to block list:",e)}}clearDomainTrackingData(e){try{this.siteData.delete(e),Array.from(this.blockedRequests.keys()).filter((t=>t.includes(e))).forEach((e=>this.blockedRequests.delete(e))),console.log("🧹 Cleared tracking data for:",e)}catch(e){console.warn("Failed to clear domain tracking data:",e)}}async enableEnhancedBlockingForDomain(e){try{const t=[{id:Date.now(),priority:1,action:{type:"block"},condition:{initiatorDomains:[e],resourceTypes:["script","xmlhttprequest","image","media","font","websocket"]}}];(e.includes("youtube.com")||e.includes("google.com"))&&t.push({id:Date.now()+1,priority:2,action:{type:"block"},condition:{urlFilter:"*youtube.com/api/stats*",resourceTypes:["xmlhttprequest"]}},{id:Date.now()+2,priority:2,action:{type:"block"},condition:{urlFilter:"*youtube.com/youtubei/v1/log_event*",resourceTypes:["xmlhttprequest"]}},{id:Date.now()+3,priority:2,action:{type:"block"},condition:{urlFilter:"*youtube.com/ptracking*",resourceTypes:["xmlhttprequest","image"]}}),await chrome.declarativeNetRequest.updateDynamicRules({addRules:t}),console.log("🛡️ Enhanced blocking enabled for:",e)}catch(e){console.warn("Failed to enable enhanced blocking:",e)}}}})();